repeat wait() until script.Parent.Parent.Name ~= "UIs"
local RS = game:GetService("ReplicatedStorage")
local SRADMEvents = RS:WaitForChild("SRAdminEvents")
local ADMEvent = SRADMEvents.ADMEventV2
local GetCMDS = SRADMEvents.GetCommands

local ReportEvent = SRADMEvents.ReportEvent
local UpdateLogEvent = SRADMEvents.UpdateLogEvent
local ManageUIEvent = SRADMEvents.ManageUI
local VerifyEvent = SRADMEvents.VerVent
local DisplayVehiclesEvent = SRADMEvents.DispVehEvent
local DisplayBackpackEvent = SRADMEvents.DisplayPlrBPEvent
local UpdateToolsEvent = SRADMEvents.UpdateTools
local GetRank = SRADMEvents.GetPlayerRank
local GetThemes = SRADMEvents.GetThemes
local UpdateChatLogs = SRADMEvents.UpdateChatLogs
local GetPrefix = SRADMEvents.GetPrefix
local GetModlogs = SRADMEvents.GetUserModlogs

local Home = script.Parent.Home
local Commands = script.Parent.Commands
local Themes = script.Parent.Themes

local reportcooldown = script.RprtInterval
local cmdcooldown = script.CMDCooldown
local RprtOnCooldown = false

--------------------------LogsUI---------------------------
local LogsUI = script.Parent:WaitForChild("Logs").Content.AContent.Log.Logs.TextRegion
local LRprtTemplate = LogsUI.RprtTemplate
local LCMDTemplate = LogsUI.CmdTemplate
--------------------------HomeUI---------------------------
local QA = Home.Content.AContent.QA.Bracket.QA

local UserQA = QA.Username.Input 
local ReasonQA = QA.Reason.Input

local WarnQA = QA.Warn.ClickRegion
local KickQA = QA.Kick.ClickRegion
local SBanQA = QA["Server Ban"].ClickRegion
local PBanQA = QA["Perm Ban"].ClickRegion
-------------------------CommandUI-------------------------
local CommandDescFrame = Commands.Content.AContent.CommandDescFrame.Desc
local CommandListFrame = Commands.Content.AContent.Commands.Commands.Cmds

local CMDTemplate = CommandListFrame.Template

local AvailableCMDS = GetCMDS:InvokeServer()

local CMDSearch = CommandListFrame.Parent.SearchFrame.Search

local Params = CommandDescFrame:WaitForChild("ParameterFrame")
local SelectedParam = Params:WaitForChild("SelectedParameter")
local MiscParam = Params:WaitForChild("Misc")

local ModParam = Params:WaitForChild("Moderation")
local ShutdownParam = Params:WaitForChild("Shutdown")
local AnnounceParam = Params:WaitForChild("Announcement")
local TimeParam = Params:WaitForChild("Time")

local FlySpeedParam = MiscParam:WaitForChild("FlySpeed")
local TeamParam = MiscParam:WaitForChild("Team")
local ToolsParam = MiscParam:WaitForChild("Tools")
local MiscUsernameParam = MiscParam:WaitForChild("Username")
local VehiclesParam = MiscParam:WaitForChild("Vehicles")

--------------------------NavbarUI-------------------------
local NavBar = script.Parent.Navbar.Navbar.Lists
local HomeButton = NavBar.Home.Content.Button
local CommandButton = NavBar.Commands.Content.Button
local ThemesButton = NavBar.Themes.Content.Button
local ChatLogsButton = NavBar.ChatLogs.Content.Button
local ModLogsButton = NavBar.Modlogs.Content.Button
local CloseButton = NavBar.Close.Content.Button
local Prefix = NavBar.Prefix.Title
Prefix.Text = GetPrefix:InvokeServer()
local RankText = NavBar.Parent:WaitForChild("Thumbnails"):WaitForChild("TextRegion").Role
--------------------------ChatLogs-------------------------
local ChatLogsFrame = script.Parent.ChatLogs
local TotalChatLogs = 0
--------------------------ModLogs--------------------------
local ModlogsFrame = script.Parent.Modlogs
local MDLogSearch = ModlogsFrame.Content.AContent.MFrame.Modlogs.SearchFrame.Search
local MDLogList = ModlogsFrame.Content.AContent.MFrame.Modlogs.ModlogsList
--------------------------ReportUI-------------------------
local ReportUI = script.Parent.Report.Content.AContent.Report.TextRegion
local ReportButton = ReportUI.Report.Button
local ReportTextBox = ReportUI.Reporter



local ReportPlrOptions = script.Parent:WaitForChild("ReportPlayerOptions")
local RprtPlrOptionsArea = ReportPlrOptions.Content.AContent.QA.Options
local OriginalRprtOptionsSize = RprtPlrOptionsArea.CanvasSize.Y.Scale
local SelectPlr = ReportUI.Parent.Plr.PlrOptions
local UserId = SelectPlr.Parent.UserIco.UserId


local QATargID = ReportUI.Parent:WaitForChild("Plr"):WaitForChild("UserIco"):WaitForChild("UserId")
local QAReason = ""
local ReportReason = ""
-----------------------------------------------------------
local SelectedScreen = Home


----------------------VehicleTableSetup--------------------
local vehicletable = DisplayVehiclesEvent:InvokeServer()
if vehicletable then
	for i=1,#vehicletable do
		local vehtemplate = VehiclesParam.Template:Clone()
		vehtemplate:FindFirstChild("Name").Text = vehicletable[i]
		vehtemplate:FindFirstChild("ClickRegion").LocalScript.Enabled = true
		vehtemplate.Name = vehicletable[i]
		vehtemplate.Parent = VehiclesParam
		vehtemplate.Visible = true
	end
end
------------------------RankNameSetup----------------------
local currentplayerrank = GetRank:InvokeServer()
for i=1,#AvailableCMDS do
	if currentplayerrank[1] >= AvailableCMDS[i][3] then
		local temp = CMDTemplate:Clone()
		temp.Title.Text = AvailableCMDS[i][1]
		temp.Desc.Text = AvailableCMDS[i][2]
		temp.Visible = true
		temp.Name = AvailableCMDS[i][1]
		temp.Parent = CommandListFrame
	end
end

RankText.Text = currentplayerrank[2]
-------------------------ThemesSetup-----------------------
local ActiveTheme = script.Parent:WaitForChild("ActiveTheme")
local SelectedTheme = script.Parent:WaitForChild("Themes"):WaitForChild("Content"):WaitForChild("AContent"):WaitForChild("QA"):WaitForChild("Bracket"):WaitForChild("SelectedTheme")
local ThemeTemplate = script.Parent:WaitForChild("Themes"):WaitForChild("Content"):WaitForChild("AContent"):WaitForChild("QA"):WaitForChild("Bracket"):WaitForChild("Themes"):WaitForChild("Template")
local themes = GetThemes:InvokeServer()
if themes ~= nil then
	for _,v in pairs(themes) do
		local theme = ThemeTemplate:Clone()
		theme.Parent = ThemeTemplate.Parent
		theme:WaitForChild("Title").Text = v["Name"]
		if v["Default"] then
			SelectedTheme.Value = theme
			theme:WaitForChild("FP"):WaitForChild("ClickRegion").Active = false
			theme:WaitForChild("FP"):WaitForChild("Title").Text = "Selected"
			theme:WaitForChild("FP"):WaitForChild("UIStroke").Color = Color3.new(0.388235, 0.388235, 0.388235)
			
			if v["Color"] == nil and v["ImageId"] ~= nil and v["ImageId"] > 0 then
				ActiveTheme.Theme.BackgroundTransparency = 1
				ActiveTheme.Theme.ImageTransparency = 0
				ActiveTheme.Image = "rbxassetid://"..tostring(v["ImageId"])
			elseif v["Color"] ~= nil and v["ImageId"] == (nil or 0) then
				ActiveTheme.Theme.ImageTransparency = 0
				ActiveTheme.Theme.BackgroundColor3 = v["Color"]
				ActiveTheme.Theme.BackgroundTransparency = 0
			end
		end
		
		if v["Color"] == nil and v["ImageId"] ~= (nil and 0) then
			theme:WaitForChild("Theme").BackgroundTransparency = 1
			theme:WaitForChild("Theme").Image = "rbxassetid://"..tostring(v["ImageId"])
			theme:WaitForChild("Theme").ImageTransparency = 0
		elseif v["Color"] ~= nil and v["ImageId"] == (nil or 0) then
			theme:WaitForChild("Theme").ImageTransparency = 1
			theme:WaitForChild("Theme").BackgroundColor3 = v["Color"]
			theme:WaitForChild("Theme").BackgroundTransparency = 0
		end
		
		theme:WaitForChild("FP"):WaitForChild("ClickRegion"):WaitForChild("LocalScript").Enabled = true
		theme.Name = v["Name"]
		theme.Visible = true
	end
end
-----------------------------------------------------------
ManageUIEvent.OnClientEvent:Connect(function(action,extraval)
	if action and extraval then
		if action == "Update UI" and tonumber(extraval) <= 4 and tonumber(extraval) >= 1 then
			extraval = tonumber(extraval)
			CommandDescFrame.Parent.Parent.Parent.Parent.Visible = false
			CommandDescFrame.Parent.Visible = false
			CommandDescFrame.Parent.Parent:WaitForChild("Commands").Visible = true
			CommandDescFrame:WaitForChild("ParameterFrame"):WaitForChild("SelectedParameter").Value = nil
			Home.Visible = true
			local prevcmds = CommandListFrame:GetChildren()
			for i=1,#prevcmds do
				if prevcmds[i]:IsA("Frame") and prevcmds[i].Name ~= "Template" then
					prevcmds[i]:Destroy()
				end
			end
			
			local cplrrank = GetRank:InvokeServer()
			for i=1,#AvailableCMDS do
				if cplrrank[1] >= AvailableCMDS[i][3] then
					if game.TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
						if AvailableCMDS[i][1]~= "Mute" and AvailableCMDS[i][1] ~= "Unmute" then
							local tempc = CMDTemplate:Clone()
							tempc.Title.Text = AvailableCMDS[i][1]
							tempc.Desc.Text = AvailableCMDS[i][2]
							tempc.Visible = true
							tempc.Name = AvailableCMDS[i][1]
							tempc.Parent = CommandListFrame
						end
					else
						local tempc = CMDTemplate:Clone()
						tempc.Title.Text = AvailableCMDS[i][1]
						tempc.Desc.Text = AvailableCMDS[i][2]
						tempc.Visible = true
						tempc.Name = AvailableCMDS[i][1]
						tempc.Parent = CommandListFrame
					end
				end
			end
			
			RankText.Text = cplrrank[2]
			
			
			
		end
	end
end)

CMDSearch:GetPropertyChangedSignal("Text"):Connect(function()
	if CMDSearch.Text ~= "" and CMDSearch.Text ~= nil then
		local scmd = CMDSearch.Text
		local listedcmds = CommandListFrame:GetChildren()
		for i=1,#listedcmds do
			if listedcmds[i].Name ~= "Template" and listedcmds[i].ClassName ~= "UIGridLayout" then
				if string.match(string.lower(listedcmds[i].Name),string.lower(scmd)) then
					listedcmds[i].Visible = true
				else
					listedcmds[i].Visible = false
				end
			end
		end
	elseif CMDSearch.Text == "" then
		local listedcmds = CommandListFrame:GetChildren()
		for i=1,#listedcmds do
			if listedcmds[i].Name ~= "Template" and listedcmds[i].ClassName ~= "UIGridLayout" then
				listedcmds[i].Visible = true
			end
		end
	end
end)

MDLogSearch.FocusLost:Connect(function()
	local CurrMDList = MDLogList:GetChildren()
	for i=1,#CurrMDList do
		if CurrMDList[i].Name ~= "Template" and CurrMDList[i]:IsA("Frame") then
			CurrMDList[i]:Destroy()
		end
	end
	if MDLogSearch.Text ~= "" and MDLogSearch.Text ~= nil then
		local UserModlogs = GetModlogs:InvokeServer(MDLogSearch.Text)
		if UserModlogs ~= nil then
			for i=1,#UserModlogs do
				if UserModlogs[i][2][3] ~= nil and UserModlogs[i][2][2] ~= nil and UserModlogs[i][2][1] ~= nil then
					local newMDLog = MDLogList.Template:Clone()
					newMDLog.Title.Text = tostring(UserModlogs[i][2][3])
					newMDLog.StaffMem.Text = tostring(UserModlogs[i][2][4])
					newMDLog.Reason.Text = tostring(UserModlogs[i][2][2])
					newMDLog.Date.Text = tostring(UserModlogs[i][2][1])
					newMDLog.Parent = MDLogList
					newMDLog.Visible = true
				end
			end
		end
	end
end)

reportcooldown.Changed:Connect(function()
	VerifyEvent:FireServer(reportcooldown.Value,"ReportCooldown")
end)

cmdcooldown.Changed:Connect(function()
	VerifyEvent:FireServer(cmdcooldown.Value,"CMDCooldown")
end)

HomeButton.Activated:Connect(function()
	if ReportPlrOptions.Visible == false then
		ModlogsFrame.Visible = false
		Home.Visible = true
		Commands.Visible = false
		Themes.Visible = false
		ChatLogsFrame.Visible = false
		SelectedScreen = Home
	end
end)

CommandButton.Activated:Connect(function()
	if ReportPlrOptions.Visible == false then
		ModlogsFrame.Visible = false
		Commands.Visible = true
		Home.Visible = false
		Themes.Visible = false
		ChatLogsFrame.Visible = false
		SelectedScreen = Commands
	end
end)

ThemesButton.Activated:Connect(function()
	if ReportPlrOptions.Visible == false then
		ModlogsFrame.Visible = false
		Themes.Visible = true
		Home.Visible = false
		Commands.Visible = false
		ChatLogsFrame.Visible = false
		SelectedScreen = Themes
	end
end)

ChatLogsButton.Activated:Connect(function()
	if ReportPlrOptions.Visible == false then
		ModlogsFrame.Visible = false
		ChatLogsFrame.Visible = true
		Home.Visible = false
		Commands.Visible = false
		Themes.Visible = false
		SelectedScreen = ChatLogsFrame
	end
	
end)

ModLogsButton.Activated:Connect(function()
	if ReportPlrOptions.Visible == false then
		ModlogsFrame.Visible = true
		Commands.Visible = false
		Home.Visible = false
		Themes.Visible = false
		ChatLogsFrame.Visible = false
		SelectedScreen = ModlogsFrame
	end
end)



CloseButton.Activated:Connect(function()
	ManageUIEvent:FireServer("delete")
end)

ReportTextBox.FocusLost:Connect(function()
	ReportReason = ReportTextBox.Text
end)

ReportPlrOptions:GetPropertyChangedSignal("Visible"):Connect(function()
	SelectedScreen.Visible = true
end)

SelectPlr.Activated:Connect(function()
	ReportPlrOptions.Visible = not ReportPlrOptions.Visible
	if ReportPlrOptions.Visible == true then
		SelectedScreen.Visible = false
		RprtPlrOptionsArea.CanvasSize = UDim2.new(0,0,OriginalRprtOptionsSize,0)
		local allPlrs = game.Players:GetChildren()
		local plrButtons = RprtPlrOptionsArea:GetChildren()
		for i=1,#plrButtons do
			if string.lower(plrButtons[i].Name) ~= "template" and plrButtons[i]:IsA("Frame") then
				plrButtons[i]:Destroy()
			end
		end
		for i=1,#allPlrs do
			local template = ReportPlrOptions.Content.AContent.QA.Options.TEMPLATE
			local v = template:Clone()
			v.Button.Plr.UserIcon.Image = game.Players:GetUserThumbnailAsync(allPlrs[i].UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420)
			v.Name = allPlrs[i].UserId
			v.Button:WaitForChild("Username").Text = allPlrs[i].Name
			v.Button.Id.Value = allPlrs[i].UserId
			v.Parent = template.Parent
			v.Visible = true
			local canvasY = template.Parent.CanvasSize.Y.Scale
			template.Parent.CanvasSize = UDim2.new(0,0,canvasY + 1,0)
		end
	else
		SelectedScreen.Visible = true
	end
end)

ReportButton.Activated:Connect(function()
	if QATargID.Value > 0 and RprtOnCooldown == false then
		RprtOnCooldown = true
		local plr = game.Players:GetPlayerByUserId(QATargID.Value)
		if plr and ReportReason ~= nil and ReportReason ~= "" then
			ReportEvent:FireServer(plr,ReportReason)
		end
		wait(reportcooldown.Value)
		RprtOnCooldown = false
	end
end)

ReportEvent.OnClientEvent:Connect(function(reporttext)
	if reporttext then
		local aLog = LogsUI.RprtTemplate:Clone()
		aLog.Text = reporttext
		aLog.Parent = LogsUI
		aLog.Visible = true
	end
end)



UserQA.FocusLost:Connect(function()
	local plr = game.Players:FindFirstChild((UserQA.Text))
	if not plr then
		QATargUser = nil
		for i=0,5 do
			UserQA.Text = "Invalid Player"
			UserQA.TextColor3 = Color3.new(1, 0.333333, 0)
			wait(0.25)
			UserQA.TextColor3 = Color3.new(1, 1, 1)
		end
		UserQA.Text = ""
		UserQA.TextColor3 = Color3.new(1,1,1)
	else
		QATargUser = UserQA.Text
	end
end)

ReasonQA.FocusLost:Connect(function()
	QAReason = ReasonQA.Text
end)

WarnQA.Activated:Connect(function()
	if QATargUser and QAReason ~= nil then
		local plr = game.Players:FindFirstChild(QATargUser)
		if plr then
			ADMEvent:FireServer(plr.Name,"Warn",QAReason,nil)
		end
	end
end)

KickQA.Activated:Connect(function()
	if QATargUser and QAReason ~= nil then
		local plr = game.Players:FindFirstChild(QATargUser)
		if plr then
			ADMEvent:FireServer(plr.Name,"Kick",QAReason,nil)
		end
	end
end)

SBanQA.Activated:Connect(function()
	if QATargUser and QAReason ~= nil then
		local plr = game.Players:FindFirstChild(QATargUser)
		if plr then
			ADMEvent:FireServer(plr.Name,"Perm Kick",QAReason,nil)
		end
	end
end)

PBanQA.Activated:Connect(function()
	if QATargUser and QAReason ~= nil then
		local plr = game.Players:FindFirstChild(QATargUser)
		if plr then
			ADMEvent:FireServer(plr.Name,"Ban",QAReason,nil)
		end
	end
end)

UpdateLogEvent.OnClientEvent:Connect(function(text)
	if text then
		local aLog = LCMDTemplate:Clone()
		aLog.Text = text
		aLog.Parent = LogsUI
		aLog.Visible = true
		
	end
end)

UpdateChatLogs.OnClientInvoke = function(newChatLogs)
	local chatLogs = ChatLogsFrame.Content.AContent.QA.Bracket.ChatLogs
	for i=1,#newChatLogs do
		if chatLogs:FindFirstChild(newChatLogs[i][1].Name.."'s Logged Message #"..tostring(newChatLogs[i][5])) == nil then
			local newChatLog = chatLogs:WaitForChild("Template"):Clone()
			newChatLog.Info.Text = newChatLogs[i][1].Name.." | "..tostring(newChatLogs[i][2]).." | "..newChatLogs[i][3].." | "..tostring(newChatLogs[i][4])
			TotalChatLogs += 1
			newChatLog.LayoutOrder = TotalChatLogs + 1
			newChatLog.Name = newChatLogs[i][1].Name.."'s Logged Message #"..tostring(newChatLogs[i][5])
			newChatLog.Parent = chatLogs
			newChatLog.Visible = true
		end
	end

end
