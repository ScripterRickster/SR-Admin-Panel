local lighting = game:GetService("Lighting")
local Players = game:GetService("Players")
local TCS = game:GetService("TextChatService")
local RS = game:GetService("ReplicatedStorage"):WaitForChild("SRAdminEvents")

local CLTEvent = RS:WaitForChild("CLTEvent")
local pltevent = RS:WaitForChild("PltEvent")
local GetTagInfo = RS:WaitForChild("GetChatTags")

local camera = game.Workspace.CurrentCamera

-- Main event that deals with client related stuff
CLTEvent.OnClientEvent:Connect(function(action,optextraval)
	if action == "Set Time" then
		if optextraval then
			lighting.ClockTime = optextraval
		end
	elseif action == "View" then
		if optextraval then
			local targplr = optextraval
			local char = targplr.Character or targplr.CharacterAdded:Wait()
			camera.CameraSubject = char
		end
	end
	
end)

-- basically enables platform stand on the humanoid or not. kinda useless tbh other than the flight stuff
pltevent.OnClientEvent:Connect(function(cmd)
	
	if cmd then
		local targplr = game.Players.LocalPlayer
		local char = targplr.Character or targplr.CharacterAdded:Wait()
		local hum = char:WaitForChild("Humanoid")
		if hum  and cmd == "Stand" then
			hum.PlatformStand = false
		elseif hum and cmd == "PlatSt" then
			hum.PlatformStand = true
		end
	end
end)

-- new chat service chat tag

TCS.OnIncomingMessage = function(message: TextChatMessage)
	if message.TextSource and TCS.ChatVersion == Enum.ChatVersion.TextChatService then
		local plr = Players:GetPlayerByUserId(message.TextSource.UserId)
		if plr then
			local taginfo = GetTagInfo:InvokeServer(plr.Name)
			if taginfo then
				local color3 = taginfo.TagColor
				local htmlcolor =string.format("#%02X%02X%02X", color3.R * 0xFF, color3.G * 0xFF, color3.B * 0xFF)
				local properties = Instance.new("TextChatMessageProperties")
				properties.PrefixText = "<font color='"..htmlcolor.."'>["..taginfo.TagText.."]</font>"..message.PrefixText
				return properties
			end
		end
	end
end
